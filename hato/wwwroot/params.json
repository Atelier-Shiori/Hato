{"name":"Detectstream","tagline":"Command line application that outputs Anime that is being stream from Safari and Chrome in JSON on OS X","body":"#What is detectstream\r\nDetectstream is a command line program utility for OS X that takes all the URLs and titles from open windows and tabs and detect Anime being stream on legal streaming sites and spit out the series title and episode. It works like this:\r\n* Check to see if Safari or Chrome is open. If there are any open windows and tabs, it will take the title and URL and put it in a dictionary, which in turn goes into an array called pages.\r\n* The Pages array is then check by a first round of regular expressions to see if the URL is a streaming site. IF there is a match, that dictionary entry will go to the matches array. If not, the entry is ignored.\r\n* Next, it goes through another round of regular expressions, but this time it's specific to a specific streaming site. Each streaming site will have a separate set of patterns. If the information is valid, it will be put in the final array.\r\n* Lastly, the final array is put into a dictionary with a key called \"result\" and is outputted in JSON. If there is no windows or match, the output for result will come out as null.\r\n\r\nHere are the example of the outputs from the currently working program:\r\n\r\n`{\"result\":[{\"browser\":\"Safari\",\"title\":\"Sword Art Online II\",\"season\":0,\"site\":\"daisuki\",\"episode\":1}]}`\r\n\r\nThis will be the output when there is no match:\r\n\r\n`{\"result\":null}`\r\n\r\nThis helper program is used in Hachidori and MAL Updater OS X for legal streaming detection support.\r\n\r\n#What Sites do you Support?\r\n\r\nWe currently Support Crunchyroll, Daisuki, Anime News Network Video Player, AnimeLab, Viz and Netflix (under Safari only). With the exception of Netflix, legal streaming detection supports work in Safari, Webkit and Chrome.\r\n\r\n# How to help out\r\nYou can help us out by sending the page title and URL of the Anime Stream with the series title, episode, service name and page source by using this form\r\nhttps://docs.google.com/forms/d/1tuv5OhD71U8L_3NyZuuZii3_A3BHlUhPAfQkkicvciU/viewform\r\n\r\nor\r\n\r\nFork this source code and add the necessary changes to improve the detection of various streaming sites.\r\n\r\n#To Compile\r\nGet the source and then type xcodebuild. You need to have Google Chrome instlalled to compile as it's used for the scripting bridge.\r\n\r\nGet the source by typing 'git clone https://github.com/chikorita157/detectstream.git'\r\n\r\nTo compile, type:\r\n[*] 'cd detectstream'\r\n[*] 'xcodebuild'\r\n\r\nThe built program should be in the build/release \r\n# How to use\r\n\r\nThe following example is in Objective C. To include it on your project, just drag it to Resources. It will be copied to the resource folder of the application bundle.\r\n\r\n`NSTask *task;`\r\n\r\n`task = [[NSTask alloc] init];`\r\n\r\n`[task setLaunchPath:[myBundle pathForResource:@\"detectstream\" ofType:@\"\"]];`\r\n \r\n`NSPipe *pipe;`\r\n\r\n`pipe = [NSPipe pipe];`\r\n\r\n`[task setStandardOutput: pipe];`\r\n \r\n\r\n\r\n`NSFileHandle *file;`\r\n\r\n`file = [pipe fileHandleForReading];`\r\n\r\n`[task launch];`\r\n\r\n`NSData *data;`\r\n\r\n`data = [file readDataToEndOfFile];` \r\n\r\n### To use the data\r\n\r\n`NSError* error;`\r\n\r\n`NSDictionary* json = [NSJSONSerialization `\r\n        `JSONObjectWithData:data`\r\n        `options:kNilOptions `\r\n        `error:&error];`\r\n\r\n`NSArray * a = [json objectForKey@\"result\"];`\r\n\r\n\r\n`NSDictionary * d = [a objectAtIndex:0];`\r\n\r\n`NSString * title = [d objectForKey@\"title\"];`\r\n\r\n`NSNumber * episode = [d objectForKey@\"episode\"];`\r\n\r\n`NSNumber * season = [d objectForKey@\"season\"];`\r\n\r\n`NSString * site = [d objectForKey@\"site\"];`\r\n\r\n`NSLog(@\"%@ - %d - %d - %@, title, [episode intValue], [season intValue], site);`\r\n\r\n#License\r\nLicensed under the [GNU Public License Version 3](https://github.com/chikorita157/detectstream/blob/master/License.md).","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}